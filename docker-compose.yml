version: "3.7"
services:
  app:
    build:
      args:
        user: ${DEV_NAME}
        uid: ${DEV_UID}
      context: ./
      dockerfile: Dockerfile
    image: example-app-img
    container_name: example-app-img
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - ./docker-compose/supervisor/config:/etc/supervisor/conf.d/
    networks:
      - example_app

  db:
    image: mysql:8.0
    container_name: example-app-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
      - 3320:3306
    volumes:
      - example_app_db:/var/lib/mysql
    networks:
      - example_app

  redis:
    image: redis:alpine
    networks:
      - example_app
    container_name: example-app-redis
    ports:
      - 6390:6379
    restart:
      always

  nginx:
    image: nginx:alpine
    container_name: example-app-nginx
    restart: unless-stopped
    ports:
      - 8020:80
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d/
    networks:
      - example_app

volumes:
  example_app_db:
networks:
  example_app:
    driver: bridge
